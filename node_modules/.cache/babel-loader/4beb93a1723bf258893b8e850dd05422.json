{"ast":null,"code":"import { GET_WORKER_CONTRACTS, GET_USER_DETAIL, LOADING, GET_USERS_CONTRACTS, GET_WORKER_DETAIL, GET_WORKERS, GET_JOBS, GET_USERS, GET_USERNAME, POST_USER, GET_WORKERS_PREMIUM, LOGIN_SUCCES, GET_WORKERS_SEARCH, ORDER_BY_RATING, FILTER, RESET, TEMPORAL_LOGOUT, PUT_USER, GET_USER_ID, GET_COUNTRIES } from '../actions/actions_vars';\n\nconst localStorageAuth = () => {\n  const auth = localStorage.getItem(\"auth\");\n  if (JSON.parse(auth)) return JSON.parse(auth);\n  return {\n    isLoggedIn: false,\n    user: {\n      id: \"\",\n      name: \"\",\n      img: \"\",\n      token: \"\"\n    }\n  };\n}; //Probando\n\n\nconst storagedData = localStorageAuth();\nconst initialState = {\n  workers: [],\n  users: [],\n  jobs: [],\n  workersPremium: [],\n  authState: storagedData,\n  workerDetail: {},\n  selectedContracts: [],\n  isLoading: false,\n  userDetail: {},\n  allCountries: [],\n  allWorkers: []\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_USER_DETAIL:\n      return { ...state,\n        userDetail: action.payload,\n        isLoading: false\n      };\n\n    case LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_USERS_CONTRACTS:\n      return { ...state,\n        selectedContracts: action.payload,\n        isLoading: false\n      };\n\n    case GET_WORKER_CONTRACTS:\n      return { ...state,\n        selectedContracts: action.payload,\n        isLoading: false\n      };\n\n    case GET_WORKER_DETAIL:\n      return { ...state,\n        workerDetail: action.payload,\n        isLoading: false\n      };\n\n    case GET_USERS:\n      return { ...state,\n        users: action.payload\n      };\n\n    case GET_USERNAME:\n      return { ...state,\n        users: action.payload\n      };\n\n    case POST_USER:\n      return { ...state\n      };\n\n    case GET_JOBS:\n      return { ...state,\n        jobs: action.payload\n      };\n\n    case GET_WORKERS:\n      let workers = action.payload;\n      var totalrating = 0;\n\n      for (let i = 0; i < workers.length; i++) {\n        totalrating = 0;\n        workers[i].Contracts && workers[i].Contracts.map(contract => totalrating = totalrating + contract.rating_W);\n        workers[i].rating = totalrating / workers[i].Contracts.length;\n      }\n\n      return { ...state,\n        workers: action.payload,\n        allWorkers: action.payload\n      };\n\n    case RESET:\n      return { ...state,\n        workers: state.allWorkers\n      };\n\n    case GET_WORKERS_PREMIUM:\n      return { ...state,\n        workersPremium: action.payload\n      };\n\n    case LOGIN_SUCCES:\n      const authState = {\n        isLoggedIn: true,\n        user: action.payload\n      };\n      localStorage.setItem('auth', JSON.stringify(authState));\n      return { ...state,\n        authState\n      };\n\n    case GET_WORKERS:\n      return { ...state,\n        workers: action.payload\n      };\n\n    case GET_WORKERS_SEARCH:\n      let filtrado = state.workers.filter(e => e.User.name.toLowerCase().includes(action.payload.toLowerCase()));\n\n      if (filtrado.length === 0) {\n        filtrado = state.workers.filter(c => c.Jobs.some(j => j.name.toLowerCase().includes(action.payload.toLowerCase())));\n      }\n\n      return { ...state,\n        workers: action.payload !== \"\" ? filtrado : state.allWorkers\n      };\n\n    case ORDER_BY_RATING:\n      {\n        return { ...state,\n          workers: action.payload\n        };\n      }\n\n    case FILTER:\n      {\n        return { ...state,\n          workers: action.payload\n        };\n      }\n\n    case TEMPORAL_LOGOUT:\n      {\n        const authState = {\n          isLoggedIn: false\n        };\n        localStorage.setItem('auth', JSON.stringify(authState));\n        return { ...state,\n          authState\n        };\n      }\n\n    case GET_USER_ID:\n      return { ...state,\n        users: action.payload\n      };\n\n    case PUT_USER:\n      {\n        return { ...state\n        };\n      }\n\n    case GET_COUNTRIES:\n      {\n        return { ...state,\n          allCountries: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["GET_WORKER_CONTRACTS","GET_USER_DETAIL","LOADING","GET_USERS_CONTRACTS","GET_WORKER_DETAIL","GET_WORKERS","GET_JOBS","GET_USERS","GET_USERNAME","POST_USER","GET_WORKERS_PREMIUM","LOGIN_SUCCES","GET_WORKERS_SEARCH","ORDER_BY_RATING","FILTER","RESET","TEMPORAL_LOGOUT","PUT_USER","GET_USER_ID","GET_COUNTRIES","localStorageAuth","auth","localStorage","getItem","JSON","parse","isLoggedIn","user","id","name","img","token","storagedData","initialState","workers","users","jobs","workersPremium","authState","workerDetail","selectedContracts","isLoading","userDetail","allCountries","allWorkers","reducer","state","action","type","payload","totalrating","i","length","Contracts","map","contract","rating_W","rating","setItem","stringify","filtrado","filter","e","User","toLowerCase","includes","c","Jobs","some","j"],"sources":["C:/Users/Gon/Desktop/Programacion/P-Grupal/Poyecto-Grupal/client/src/redux/reducer/reducer.js"],"sourcesContent":["\r\nimport {GET_WORKER_CONTRACTS,GET_USER_DETAIL,LOADING,GET_USERS_CONTRACTS,GET_WORKER_DETAIL, GET_WORKERS, GET_JOBS, GET_USERS, GET_USERNAME, POST_USER, GET_WORKERS_PREMIUM, LOGIN_SUCCES , GET_WORKERS_SEARCH, ORDER_BY_RATING, FILTER, RESET, TEMPORAL_LOGOUT, PUT_USER, GET_USER_ID,GET_COUNTRIES } from '../actions/actions_vars'\r\n\r\nconst localStorageAuth = () => {\r\n  const auth = localStorage.getItem(\"auth\");\r\n  if(JSON.parse(auth)) return JSON.parse(auth);\r\n  return { isLoggedIn: false , user: { id : \"\", name : \"\",img: \"\", token: \"\"}}\r\n}\r\n//Probando\r\n\r\nconst storagedData = localStorageAuth();\r\n\r\nconst initialState = {\r\n  workers: [],\r\n  users: [],\r\n  jobs: [],\r\n  workersPremium: [],\r\n  authState: storagedData,\r\n  workerDetail: {},\r\n  selectedContracts: [],\r\n  isLoading: false,\r\n  userDetail: {},\r\n  allCountries: [],\r\n  allWorkers: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n\r\n    case GET_USER_DETAIL:\r\n      return{\r\n        ...state,\r\n        userDetail: action.payload,\r\n        isLoading:false\r\n      }\r\n\r\n    case LOADING:\r\n      return{\r\n        ...state,\r\n        isLoading:true\r\n      }\r\n    case GET_USERS_CONTRACTS:\r\n      return{\r\n        ...state,\r\n        selectedContracts:action.payload,\r\n        isLoading:false\r\n      }\r\n\r\n    case GET_WORKER_CONTRACTS:\r\n      return{\r\n        ...state,\r\n        selectedContracts:action.payload,\r\n        isLoading:false\r\n      }\r\n\r\n    case GET_WORKER_DETAIL:\r\n      return{\r\n        ...state,\r\n        workerDetail: action.payload,\r\n        isLoading:false\r\n      }\r\n    case GET_USERS:\r\n        return {\r\n          ...state,            \r\n          users: action.payload            \r\n        }\r\n    case GET_USERNAME:\r\n      return {\r\n        ...state,        \r\n        users: action.payload\r\n      }\r\n    case POST_USER:\r\n        return {\r\n          ...state\r\n        }\r\n    case GET_JOBS: \r\n      return{\r\n        ...state,\r\n        jobs : action.payload\r\n    }\r\n\r\n    case GET_WORKERS:\r\n      let workers = action.payload\r\n      var totalrating = 0\r\n      for (let i = 0; i < workers.length; i++) {\r\n        totalrating = 0\r\n        workers[i].Contracts && workers[i].Contracts.map(contract => totalrating = totalrating + contract.rating_W)\r\n        workers[i].rating = totalrating / workers[i].Contracts.length\r\n      }\r\n      return {\r\n        ...state,\r\n        workers: action.payload,\r\n        allWorkers: action.payload\r\n}\r\n    case RESET: \r\n    return {\r\n        ...state,\r\n        workers: state.allWorkers\r\n    }\r\n    case GET_WORKERS_PREMIUM:\r\n      return {\r\n        ...state,\r\n      workersPremium: action.payload\r\n      }\r\n    case LOGIN_SUCCES:\r\n      const authState = {\r\n        isLoggedIn: true,\r\n        user: action.payload\r\n      }\r\n\r\n      localStorage.setItem('auth', JSON.stringify(authState));\r\n      return {\r\n        ...state,\r\n        authState\r\n      }\r\n    case GET_WORKERS:\r\n      return {\r\n        ...state,\r\n        workers: action.payload\r\n      }\r\n      case GET_WORKERS_SEARCH:\r\n        let filtrado = state.workers.filter( (e) => e.User.name.toLowerCase().includes(action.payload.toLowerCase()))\r\n        if(filtrado.length === 0) {\r\n          filtrado = state.workers.filter( c => c.Jobs.some( j => j.name.toLowerCase().includes(action.payload.toLowerCase())));\r\n        }\r\n      return {\r\n          ...state,\r\n          workers: action.payload !== \"\" ? filtrado : state.allWorkers\r\n        }\r\n\r\n      case ORDER_BY_RATING:{\r\n        return {\r\n          ...state,\r\n          workers: action.payload\r\n        }\r\n      }\r\n\r\n      case FILTER: {\r\n        return {\r\n          ...state,\r\n          workers: action.payload\r\n        }\r\n      }\r\n\r\n      case TEMPORAL_LOGOUT: {\r\n        const authState = {\r\n          isLoggedIn: false,\r\n        }\r\n  \r\n        localStorage.setItem('auth', JSON.stringify(authState));\r\n        return {\r\n          ...state,\r\n          authState\r\n        }\r\n      }\r\n\r\n      case GET_USER_ID:\r\n      return {\r\n        ...state,\r\n        users: action.payload \r\n      }\r\n    case PUT_USER: {\r\n      return{\r\n        ...state\r\n      }\r\n    }\r\n    case GET_COUNTRIES: {\r\n      return{\r\n        ...state,\r\n        allCountries: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}